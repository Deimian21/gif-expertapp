{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GifItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GigExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","imputValiu","setimputValiu","onSubmit","e","preventDefault","trimEnd","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAa1C,OACI,uBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,UAAUC,OAAO,IAC9BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKd,UAEI,sDACA,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfrB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,c,+BCNfG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,0FAC8EC,UAAUH,GADxF,sBAEII,MAAOF,GAFX,cAETG,EAFS,gBAGKA,EAAKC,OAHV,uBAGRC,EAHQ,EAGRA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QARzB,kBAYRM,GAZQ,4CAAH,sDCENO,EAAU,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAEzB,OACI,sBAAKI,UAAU,kBAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAwBtC,OAjBIC,qBAAU,WACVxB,EAAOC,GACNwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGvB,CAACpB,IASIqB,EDrBwBK,CAAa1B,GAA/Ba,EADsB,EAC3BN,KAAYa,EADe,EACfA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,kBAAd,SAAiChB,IAC/BoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAIIH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEcNgB,EA3BM,WAAM,IAAD,EAGWzC,mBAAS,CAAC,gBAHrB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAUvB,OACH,qCACA,+CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAEG,6BACK2C,EAAWnB,KAAI,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCpBN6B,G,MAAQC,SAASC,cAAc,UACrCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.ee92ad62.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [imputValiu, setimputValiu] = useState('');\r\n    const handleInputChange= (e) =>{\r\n     setimputValiu(e.target.value);\r\n    }\r\n    const handleSumbit = (e) =>{\r\n      e.preventDefault();\r\n      if (imputValiu.trimEnd().length>2) {\r\n        setCategory( cats => [imputValiu,...cats]);\r\n        setimputValiu('');\r\n      }\r\n      \r\n    }\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n            \r\n            <h2> AÃ±adir componete</h2>\r\n            <input type='text' value={imputValiu} onChange={handleInputChange}></input>\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n  setCategory:Proptypes.func.isRequired\r\n}\r\n","export const getGif = async(category) =>{\r\n       const url=`https://api.giphy.com/v1/gifs/search?api_key=3BDrcPUuzViMddFuXgAfUU0CtEIdG156&q=${encodeURI(category)}&limit=10`; \r\n       const resp = await fetch( url );\r\n       const {data} =await resp.json();\r\n       const gifs = data.map (img =>{\r\n           return {\r\n               id:img.id,\r\n               title:img.title,\r\n               url:img.images.downsized_medium.url\r\n\r\n           }\r\n       })\r\n       return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifItem = ({url,title}) => {\r\n    //console.log(props);\r\n    return (\r\n        <div className='animate__fadeIn'>\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import { logDOM } from '@testing-library/react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n     const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__fadeIn'>{category}</h3>\r\n        { loading && <p>Loading</p>}\r\n        <div className='card-grid'>\r\n          \r\n            { \r\n\r\n            images.map( img =>(\r\n            <GifItem \r\n            key={img.id}\r\n            {...img}/>\r\n            ) )\r\n\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n      data:[],\r\n      loading: true\r\n    \r\n    });\r\n\r\n        useEffect(()=>{\r\n        getGif(category)\r\n        .then(imgs => { \r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    },[category]  )\r\n\r\n   /*  setTimeout(() => {\r\n        setstate({\r\n            data:[1,2,3,4,5,6,7],\r\n            loading: false\r\n        })\r\n    },3000); */\r\n\r\n    return state;\r\n}\r\n","\r\nimport{ useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n  \r\n   \r\n   const [categories, setCategory] = useState(['Dragon ball']);\r\n  /*  const handleAdd = () =>{\r\n   //setCategory ([...categories,'Comict']);\r\n   setCategory( cats => [...categories,'Comics']);\r\n   } */\r\n\r\n\r\n   return (\r\n<>\r\n<h2> GifExpertApp</h2>\r\n<AddCategory setCategory={setCategory}/>\r\n<hr/>\r\n\r\n   <ol>\r\n      { categories.map(category =>(\r\n       <GifGrid\r\n       key={category} \r\n       category={category}\r\n       />\r\n      ))\r\n   }\r\n   </ol>\r\n</>\r\n)}\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GigExpertApp';\nimport './index.css';\nconst divRot= document.querySelector('#root');\nReactDOM.render(<GifExpertApp />,divRot);\n\n"],"sourceRoot":""}